First Sets:
/* M2C FIRST set initialisers -- generated by gen_first_sets.c */


#define INIT_FIRST_OF_DEFINITION_MODULE \
  
( /* bits: */ 0x00000100, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_IMPORT \
  
( /* bits: */ 0x00120000, 0x00000000, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_QUALIFIED_IMPORT \
  
( /* bits: */ 0x00100000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_UNQUALIFIED_IMPORT \
  
( /* bits: */ 0x00020000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_IDENT_LIST \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_DEFINITION \
  
( /* bits: */ 0x20000080, 0x000000a0, 0x00000000, /* counter: */ 4 );


#define INIT_FIRST_OF_CONST_DEFINITION \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_TYPE_DEFINITION \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_TYPE \
  
( /* bits: */ 0xb0000008, 0x00000404, 0x00000140, /* counter: */ 8 );


#define INIT_FIRST_OF_DERIVED_OR_SUBRange_TYPE \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000100, /* counter: */ 2 );


#define INIT_FIRST_OF_QUALIDENT \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_Range \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000100, /* counter: */ 1 );


#define INIT_FIRST_OF_ENUM_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000040, /* counter: */ 1 );


#define INIT_FIRST_OF_SET_TYPE \
  
( /* bits: */ 0x00000000, 0x00000004, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_COUNTABLE_TYPE \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000140, /* counter: */ 3 );


#define INIT_FIRST_OF_ARRAY_TYPE \
  
( /* bits: */ 0x00000008, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_EXTENSIBLE_RECORD_TYPE \
  
( /* bits: */ 0x80000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_FIELD_LIST_SEQUENCE \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_VARIANT_RECORD_TYPE \
  
( /* bits: */ 0x80000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_VARIANT_FIELD_LIST_SEQ \
  
( /* bits: */ 0x00000040, 0x00000400, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_VARIANT_FIELD_LIST \
  
( /* bits: */ 0x00000040, 0x00000400, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_VARIANT_FIELDS \
  
( /* bits: */ 0x00000040, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_VARIANT \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_CASE_LABEL_LIST \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_CASE_LABELS \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_POINTER_TYPE \
  
( /* bits: */ 0x10000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_PROCEDURE_TYPE \
  
( /* bits: */ 0x20000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_SIMPLE_FORMAL_TYPE \
  
( /* bits: */ 0x00000008, 0x00000400, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_PROCEDURE_HEADER \
  
( /* bits: */ 0x20000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_PROCEDURE_SIGNATURE \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_SIMPLE_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_IMPLEMENTATION_MODULE \
  
( /* bits: */ 0x00080000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_PROGRAM_MODULE \
  
( /* bits: */ 0x01000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_MODULE_PRIORITY \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000100, /* counter: */ 1 );


#define INIT_FIRST_OF_BLOCK \
  
( /* bits: */ 0x21002090, 0x000000a0, 0x00000000, /* counter: */ 7 );


#define INIT_FIRST_OF_DECLARATION \
  
( /* bits: */ 0x21000080, 0x000000a0, 0x00000000, /* counter: */ 5 );


#define INIT_FIRST_OF_TYPE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_VAR_SIZE_RECORD_TYPE \
  
( /* bits: */ 0x00000000, 0x00000080, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_VARIABLE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_PROCEDURE_DECLARATION \
  
( /* bits: */ 0x20000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_MODULE_DECLARATION \
  
( /* bits: */ 0x01000000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_EXPORT \
  
( /* bits: */ 0x00008000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_STATEMENT_SEQUENCE \
  
( /* bits: */ 0x00454040, 0x00000703, 0x00000000, /* counter: */ 10 );


#define INIT_FIRST_OF_STATEMENT \
  
( /* bits: */ 0x00454040, 0x00000703, 0x00000000, /* counter: */ 10 );


#define INIT_FIRST_OF_AssignMENT_OR_PROC_CALL \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_ACTUAL_PARAMETERS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000040, /* counter: */ 1 );


#define INIT_FIRST_OF_EXPRESSION_LIST \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_RETURN_STATEMENT \
  
( /* bits: */ 0x00000000, 0x00000002, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_WITH_STATEMENT \
  
( /* bits: */ 0x00000000, 0x00000200, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_IF_STATEMENT \
  
( /* bits: */ 0x00040000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_CASE_STATEMENT \
  
( /* bits: */ 0x00000040, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_CASE \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_LOOP_STATEMENT \
  
( /* bits: */ 0x00400000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_WHILE_STATEMENT \
  
( /* bits: */ 0x00000000, 0x00000100, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_REPEAT_STATEMENT \
  
( /* bits: */ 0x00000000, 0x00000001, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_FOR_STATEMENT \
  
( /* bits: */ 0x00010000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_DESIGNATOR \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_SELECTOR \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000111, /* counter: */ 3 );


#define INIT_FIRST_OF_EXPRESSION \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_SIMPLE_EXPRESSION \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_TERM \
  
( /* bits: */ 0x02000000, 0x00007c00, 0x00000440, /* counter: */ 8 );


#define INIT_FIRST_OF_SIMPLE_TERM \
  
( /* bits: */ 0x02000000, 0x00007c00, 0x00000440, /* counter: */ 8 );


#define INIT_FIRST_OF_FACTOR \
  
( /* bits: */ 0x00000000, 0x00007c00, 0x00000440, /* counter: */ 7 );


#define INIT_FIRST_OF_DESIGNATOR_OR_FUNC_CALL \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_SET_VALUE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000400, /* counter: */ 1 );


#define INIT_FIRST_OF_ELEMENT \
  
( /* bits: */ 0x02000000, 0x00187c00, 0x00000440, /* counter: */ 10 );


#define INIT_FIRST_OF_FORMAL_TYPE \
  
( /* bits: */ 0x00000088, 0x00000480, 0x00000000, /* counter: */ 4 );


#define INIT_FIRST_OF_ATTRIBUTED_FORMAL_TYPE \
  
( /* bits: */ 0x00000080, 0x00000080, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_FORMAL_PARAM_LIST \
  
( /* bits: */ 0x00000080, 0x00000480, 0x00000000, /* counter: */ 3 );


#define INIT_FIRST_OF_FORMAL_PARAMS \
  
( /* bits: */ 0x00000080, 0x00000480, 0x00000000, /* counter: */ 3 );


#define INIT_FIRST_OF_ATTRIB_FORMAL_PARAMS \
  
( /* bits: */ 0x00000080, 0x00000080, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_TYPE_DECLARATION_TAIL \
  
( /* bits: */ 0xb0000008, 0x00000484, 0x00000140, /* counter: */ 9 );


#define INIT_FIRST_OF_ALT_FORMAL_TYPE \
  
( /* bits: */ 0x00000008, 0x00000480, 0x00000000, /* counter: */ 3 );


#define INIT_FIRST_OF_ALT_ATTRIB_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x00000080, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_ALT_FORMAL_PARAM_LIST \
  
( /* bits: */ 0x00000000, 0x00000480, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_ALT_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000480, 0x00000000, /* counter: */ 2 );


#define INIT_FIRST_OF_ALT_ATTRIB_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000080, 0x00000000, /* counter: */ 1 );


#define INIT_FIRST_OF_ALT_TYPE_DECL_TAIL \
  
( /* bits: */ 0xb0000008, 0x00000404, 0x00000140, /* counter: */ 8 );


#endif /* M2C_FIRST_SET_INITS_H */


/* END OF FILE */

Follow Sets:
/* M2C FOLLOW set initialisers -- generated by gen_follow_sets.c */


#ifndef M2C_TOKENSET_LITERAL_T

#define M2C_TOKENSET_LITERAL_T




#endif /* M2C_TOKENSET_LITERAL_T */


#ifndef M2C_FOLLOW_SET_INITS_H

#define M2C_FOLLOW_SET_INITS_H


#define INIT_FOLLOW_OF_DEFINITION_MODULE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00001000, /* counter: */ 1 );


#define INIT_FOLLOW_OF_IMPORT \
  
( /* bits: */ 0x2100a190, 0x000000a0, 0x00000000, /* counter: */ 9 );


#define INIT_FOLLOW_OF_QUALIFIED_IMPORT \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_UNQUALIFIED_IMPORT \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_IDENT_LIST \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000086, /* counter: */ 3 );


#define INIT_FOLLOW_OF_DEFINITION \
  
( /* bits: */ 0x00002000, 0x00000000, 0x00000000, /* counter: */ 1 );


#define INIT_FOLLOW_OF_CONST_DEFINITION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_TYPE_DEFINITION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_DERIVED_OR_SUBRange_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_QUALIDENT \
  
( /* bits: */ 0x0ca03e22, 0xdff80058, 0x00000dec, /* counter: */ 34 );


#define INIT_FOLLOW_OF_Range \
  
( /* bits: */ 0x04000000, 0x80000000, 0x00000004, /* counter: */ 3 );


#define INIT_FOLLOW_OF_ENUM_TYPE \
  
( /* bits: */ 0x04000000, 0x80000000, 0x00000004, /* counter: */ 3 );


#define INIT_FOLLOW_OF_SET_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_COUNTABLE_TYPE \
  
( /* bits: */ 0x04000000, 0x80000000, 0x00000004, /* counter: */ 3 );


#define INIT_FOLLOW_OF_ARRAY_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_EXTENSIBLE_RECORD_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_FIELD_LIST_SEQUENCE \
  
( /* bits: */ 0x00002000, 0x00000080, 0x00000000, /* counter: */ 2 );


#define INIT_FOLLOW_OF_VARIANT_RECORD_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_VARIANT_FIELD_LIST_SEQ \
  
( /* bits: */ 0x00002800, 0x00000000, 0x00000020, /* counter: */ 3 );


#define INIT_FOLLOW_OF_VARIANT_FIELD_LIST \
  
( /* bits: */ 0x00002800, 0x00000000, 0x00000024, /* counter: */ 4 );


#define INIT_FOLLOW_OF_VARIANT_FIELDS \
  
( /* bits: */ 0x00002800, 0x00000000, 0x00000024, /* counter: */ 4 );


#define INIT_FOLLOW_OF_VARIANT \
  
( /* bits: */ 0x00002800, 0x00000000, 0x00000020, /* counter: */ 3 );


#define INIT_FOLLOW_OF_CASE_LABEL_LIST \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000002, /* counter: */ 1 );


#define INIT_FOLLOW_OF_CASE_LABELS \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000002, /* counter: */ 2 );


#define INIT_FOLLOW_OF_POINTER_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_PROCEDURE_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_SIMPLE_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000080, /* counter: */ 2 );


#define INIT_FOLLOW_OF_PROCEDURE_HEADER \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_PROCEDURE_SIGNATURE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_SIMPLE_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000084, /* counter: */ 2 );


#define INIT_FOLLOW_OF_IMPLEMENTATION_MODULE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00001000, /* counter: */ 1 );


#define INIT_FOLLOW_OF_PROGRAM_MODULE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00001000, /* counter: */ 1 );


#define INIT_FOLLOW_OF_MODULE_PRIORITY \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_BLOCK \
  
( /* bits: */ 0x00000000, 0x00000400, 0x00000000, /* counter: */ 1 );


#define INIT_FOLLOW_OF_DECLARATION \
  
( /* bits: */ 0x00002010, 0x00000000, 0x00000000, /* counter: */ 2 );


#define INIT_FOLLOW_OF_TYPE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_VAR_SIZE_RECORD_TYPE \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_VARIABLE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_PROCEDURE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_MODULE_DECLARATION \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_EXPORT \
  
( /* bits: */ 0x21002090, 0x000000a0, 0x00000000, /* counter: */ 7 );


#define INIT_FOLLOW_OF_STATEMENT_SEQUENCE \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000020, /* counter: */ 5 );


#define INIT_FOLLOW_OF_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_AssignMENT_OR_PROC_CALL \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_ACTUAL_PARAMETERS \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_EXPRESSION_LIST \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000080, /* counter: */ 1 );


#define INIT_FOLLOW_OF_RETURN_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_WITH_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_IF_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_CASE_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_CASE \
  
( /* bits: */ 0x00002800, 0x00000000, 0x00000020, /* counter: */ 3 );


#define INIT_FOLLOW_OF_LOOP_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_WHILE_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_REPEAT_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_FOR_STATEMENT \
  
( /* bits: */ 0x00003800, 0x00000040, 0x00000024, /* counter: */ 6 );


#define INIT_FOLLOW_OF_DESIGNATOR \
  
( /* bits: */ 0x0ca03e22, 0xdff80058, 0x00000cec, /* counter: */ 33 );


#define INIT_FOLLOW_OF_SELECTOR \
  
( /* bits: */ 0x0ca03e22, 0xdff80458, 0x00000cec, /* counter: */ 34 );


#define INIT_FOLLOW_OF_EXPRESSION \
  
( /* bits: */ 0x04003c20, 0x80000058, 0x000008ac, /* counter: */ 15 );


#define INIT_FOLLOW_OF_SIMPLE_EXPRESSION \
  
( /* bits: */ 0x04203c20, 0x87e00058, 0x000008ac, /* counter: */ 22 );


#define INIT_FOLLOW_OF_TERM \
  
( /* bits: */ 0x0c203c20, 0x87f80058, 0x000008ac, /* counter: */ 25 );


#define INIT_FOLLOW_OF_SIMPLE_TERM \
  
( /* bits: */ 0x0ca03e22, 0x9ff80058, 0x000008ac, /* counter: */ 30 );


#define INIT_FOLLOW_OF_FACTOR \
  
( /* bits: */ 0x0ca03e22, 0x9ff80058, 0x000008ac, /* counter: */ 30 );


#define INIT_FOLLOW_OF_DESIGNATOR_OR_FUNC_CALL \
  
( /* bits: */ 0x0ca03e22, 0x9ff80058, 0x000008ac, /* counter: */ 30 );


#define INIT_FOLLOW_OF_SET_VALUE \
  
( /* bits: */ 0x0ca03e22, 0x9ff80058, 0x000008ac, /* counter: */ 30 );


#define INIT_FOLLOW_OF_ELEMENT \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000800, /* counter: */ 2 );


#define INIT_FOLLOW_OF_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000080, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ATTRIBUTED_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000080, /* counter: */ 2 );


#define INIT_FOLLOW_OF_FORMAL_PARAM_LIST \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000080, /* counter: */ 1 );


#define INIT_FOLLOW_OF_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000084, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ATTRIB_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000084, /* counter: */ 2 );


#define INIT_FOLLOW_OF_TYPE_DECLARATION_TAIL \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#define INIT_FOLLOW_OF_ALT_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000080, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ALT_ATTRIB_FORMAL_TYPE \
  
( /* bits: */ 0x00000000, 0x80000000, 0x00000080, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ALT_FORMAL_PARAM_LIST \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000080, /* counter: */ 1 );


#define INIT_FOLLOW_OF_ALT_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000084, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ALT_ATTRIB_FORMAL_PARAMS \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000084, /* counter: */ 2 );


#define INIT_FOLLOW_OF_ALT_TYPE_DECL_TAIL \
  
( /* bits: */ 0x00000000, 0x00000000, 0x00000004, /* counter: */ 1 );


#endif /* M2C_FOLLOW_SET_INITS_H */


/* END OF FILE */

